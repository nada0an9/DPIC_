
@{
    ViewBag.Title = "Edit";
}

@model WebApplication27.Models.choiceModel
<div class="d-flex justify-content-center" style="margin:5rem; ">

    <div class="card w-75">
        <div class="card-body">
            <fieldset class="scheduler-border">
                <legend class="scheduler-border">Edit Choice</legend>
                <form method="post" action="@Url.Action("edit", "MultipleChoice")">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(model => model.CHOICE_ID)
                    @Html.ValidationMessageFor(m => m.CHOICE_ID, "", new { @class = "text-danger" })

                    <div class="form-group">
                        <lable>Referenced Question</lable><br />
                        @Html.DisplayFor(Models => Models.QUESTION.QUESTION1)
                        @Html.ValidationMessageFor(m => m.QUESTION_ID, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.QUESTION_ID)


                    </div>
                    <div class="form-group">
                        <lable>Choice Name </lable><br />
                        @Html.DisplayFor(Models => Models.CHOICE_NAM, new { @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(m => m.CHOICE_NAM, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.CHOICE_NAM)

                    </div>
                    <div class="form-group">
                        <lable>Display Order</lable><br />
                        @Html.DisplayFor(Models => Models.DISPLAY_ORDER, new { @class = "form-control", required = "required", onkeypress = "return validateNumber(event)" })
                        @Html.ValidationMessageFor(m => m.DISPLAY_ORDER, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.DISPLAY_ORDER)

                    </div>
                    <div class="form-group">

                        <label>Status</label><span class="text-danger">  *</span><br />
                        @Html.RadioButtonFor(Models => Models.VISIBILITY_STATUS, "Visible", new { name = "Status", required = "required", }) Visible<br />
                        @Html.RadioButtonFor(Models => Models.VISIBILITY_STATUS, "Hide", new { name = "Status" }) Hide
                        @Html.ValidationMessageFor(m => m.VISIBILITY_STATUS, "", new { @class = "text-danger" })

                    </div>

                    <button type="submit" style="background-color: #428bca; color: #fff" class="btn">Save Changes </button>


                </form>
            </fieldset>
        </div>
    </div>
</div>
